#!/bin/bash
################################################################################
#
#  ripsacd
#
#  Simple script for ripping SACDs from a compatible Blu-ray player and
#  uploading them to a NAS via rsync. Tested on Ubuntu 20.04 LTS, but it
#  may work on other Debian-based systems.
#
################################################################################

sacd_server=""   # IP address of your Blu-ray player. eg., "192.168.1.86"
rsync_target=""  # where to upload sacd. eg., "my-synology:/volume1/music"
rip_flags="--2ch-tracks --output-dsf  --dsf-nopad"

if [ -z "${sacd_server}" ]; then
  if [ -n "${1}" ]; then
    sacd_server="${1}"
  else
    2>&1 echo "Usage: $0 Blu-ray player IP address"
    exit 1
  fi
fi
if [ -z "${rsync_target}" ] && [ -n "${2}" ]; then
  rsync_target="${2}"
fi

export PATH=~/bin:$PATH
command -v sacd_extract || (
  if command -v apt-get; then
    echo "Installing sacd_extract..."
  else
    2>&1 echo "Only tested on a Debian-based system. Sorry."
    exit 2
  fi
  cd ~ || exit
  mkdir -pv ~/bin
  sudo apt-get update && sudo apt-get upgrade
  sudo apt-get -y install cmake git rsync
  git clone https://github.com/setmind/sacd-ripper.git
  cd sacd-ripper/tools/sacd_extract || exit
  cmake . && make
  if [ -x ./sacd_extract ]; then
    ln sacd_extract ~/bin/
  else
    2>&1 echo "Build of sacd_extract failed. See above for details."
    exit 3
  fi
)

eval "$(
  sacd_extract --input "${sacd_server}":2002 --print |
  perl -ne 'print "$1=\"$2\"\n" if /^\t(\w+): (.*)/'
)"

Artist="$(echo "${Artist}" | tr -d '/\\;/')"
Title="$(echo "${Title}" | tr -d '/\\;/')"

output="${HOME}/sacd/${Artist}/${Title} (SACD)"
umask 002
mkdir -pv "${output}"
echo "----------------------------------------"
echo "Ripping ${Title} on $(date)"
# shellcheck disable=SC2086
sacd_extract --input ${sacd_server}:2002 ${rip_flags} --output-dir "${output}"
# shellcheck disable=SC2010
tmpdir="$(ls "${output}" | grep -v '\.dsf$')"
if  [ -n "${tmpdir}" ]; then
  echo "----------------------------------------"
  echo "Rip complete on $(date)"
  mv "${output}"/"${tmpdir}"/*.dsf "${output}" && rmdir "${output}"/"${tmpdir}"
  if [ -n "${rsync_target}" ]; then
    rsync -avui --progress --stats --rsync-path=/usr/bin/rsync "${HOME}"/sacd "${rsync_target}"
  fi
else
  2>&1 echo "Rip failed. See output above."
  exit 5
fi
